export const email_with_link_that_doesnt_get_categorized_correctly = {
  id: "1938e4ecd5061b1a",
  threadId: "1938e4ecd5061b1a",
  labelIds: ["Label_19", "IMPORTANT", "CATEGORY_UPDATES", "INBOX"],
  snippet:
    "Before we get going â€” please enjoy my speech from Web Summit, Why Are All Tech Products Now Shit? I didn&#39;t write the title. What if what we&#39;re seeing today isn&#39;t a glimpse of the future,",
  payload: {
    partId: "",
    mimeType: "multipart/alternative",
    filename: "",
    headers: [
      {
        name: "Delivered-To",
        value: "lydia.stepanek@gmail.com",
      },
      {
        name: "Received",
        value:
          "by 2002:a05:6130:907:b0:85b:96ee:9455 with SMTP id kc7csp3951371uab;        Tue, 3 Dec 2024 12:55:49 -0800 (PST)",
      },
      {
        name: "X-Google-Smtp-Source",
        value:
          "AGHT+IEngb08xg4Fmu0czF+6J7jZtjs7nZhoGVpWh/aFAPISuXi2CTG9QE45YgfUJMuGN1QnqVZm",
      },
      {
        name: "X-Received",
        value:
          "by 2002:a17:902:e54d:b0:215:6fcd:6cd1 with SMTP id d9443c01a7336-215bcfbcde4mr48761185ad.7.1733259349088;        Tue, 03 Dec 2024 12:55:49 -0800 (PST)",
      },
      {
        name: "ARC-Seal",
        value:
          "i=1; a=rsa-sha256; t=1733259349; cv=none;        d=google.com; s=arc-20240605;        b=d51GsiOUOcjfCpsPy6zP947edAZHektQNmK0UENjRIJPvnn1Ctq2hbOS8NhyZELSo4         2UllLhKImqz/W1R0bnPyGqKQTRXuQfNw8olGzP8inscrHa/VkzHBXQJzPul4qhDw69WY         lW91jW4/7A8i5dMP5pVjo0+MevluVSOTnR85H5PCduw2agv24G5EJjYefAvA++PNHU/Z         M5H/Bh9hvcNuTA0wLZAXcpYfJPJQuWs4I+sVXUy5V+Su1Sp6OxLfoPZMMK8MTlErjWXV         WqkAZfero7zGNeBeinqJZi+zQ5yqHhJ7Q6Y2yKYMxakeLDBLUf/DlmXmQi4t3Xba4I2R         wJgA==",
      },
      {
        name: "ARC-Message-Signature",
        value:
          "i=1; a=rsa-sha256; c=relaxed/relaxed; d=google.com; s=arc-20240605;        h=message-id:list-unsubscribe-post:list-unsubscribe:reply-to:to:from         :subject:mime-version:date:sender:dkim-signature:dkim-signature;        bh=5lskDOw5Pmw3B9zNdU6PTOgWoESQ5ajSvNgth8WPFzk=;        fh=p6FPBSc3TAzPyaVo11/5vWtWgo26dK5DXF97+PJs36E=;        b=RQO+dBSOPz/Cf60hlle2zT3xAEQOffrRarW5YrSs8GFnNIcDYSLFmJkhnrUxFlajFi         s+b6PRMBYIzHIG1UwyjLDwPE9yY4iGfAYu7L41n1R20ks/TrqWfPoLna72rUoOn9Tx3s         HzCwewRRZl5RTTeAcoBqnSOlWdfcKSEu+ZhkO2hLwgHqQS3WEBkB1b8J0AuBE7kIqalr         jCFP3vMhpWLGqwUCTMiXyWwe95BHXS+tGDiq1f4SeBdK3jK5dAETtv0JxAu6039FW8PG         b4snAu5RrpYJh5eoVRhAAef4QJ5vGAiFlWLckvP4GPqIfyH864dnNmQWxYMfNF1HrOqO         1vww==;        dara=google.com",
      },
      {
        name: "ARC-Authentication-Results",
        value:
          'i=1; mx.google.com;       dkim=pass header.i=@ghost.wheresyoured.at header.s=pic header.b=KFzQrOoI;       dkim=pass header.i=@mailgun.org header.s=mg header.b="OnWm+b/+";       spf=pass (google.com: domain of bounce+d55e91.d32c6c9-lydia.stepanek=gmail.com@ghost.wheresyoured.at designates 159.135.234.31 as permitted sender) smtp.mailfrom="bounce+d55e91.d32c6c9-lydia.stepanek=gmail.com@ghost.wheresyoured.at";       dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=wheresyoured.at',
      },
      {
        name: "Return-Path",
        value:
          "\u003cbounce+d55e91.d32c6c9-lydia.stepanek=gmail.com@ghost.wheresyoured.at\u003e",
      },
      {
        name: "Received",
        value:
          "from relay13.ghost.io (relay13.ghost.io. [159.135.234.31])        by mx.google.com with UTF8SMTPS id d9443c01a7336-215cca8ce65si11800765ad.338.2024.12.03.12.55.48        for \u003clydia.stepanek@gmail.com\u003e        (version=TLS1_3 cipher=TLS_AES_128_GCM_SHA256 bits=128/128);        Tue, 03 Dec 2024 12:55:49 -0800 (PST)",
      },
      {
        name: "Received-SPF",
        value:
          "pass (google.com: domain of bounce+d55e91.d32c6c9-lydia.stepanek=gmail.com@ghost.wheresyoured.at designates 159.135.234.31 as permitted sender) client-ip=159.135.234.31;",
      },
      {
        name: "Authentication-Results",
        value:
          'mx.google.com;       dkim=pass header.i=@ghost.wheresyoured.at header.s=pic header.b=KFzQrOoI;       dkim=pass header.i=@mailgun.org header.s=mg header.b="OnWm+b/+";       spf=pass (google.com: domain of bounce+d55e91.d32c6c9-lydia.stepanek=gmail.com@ghost.wheresyoured.at designates 159.135.234.31 as permitted sender) smtp.mailfrom="bounce+d55e91.d32c6c9-lydia.stepanek=gmail.com@ghost.wheresyoured.at";       dmarc=pass (p=NONE sp=NONE dis=NONE) header.from=wheresyoured.at',
      },
      {
        name: "DKIM-Signature",
        value:
          "a=rsa-sha256; v=1; c=relaxed/relaxed; d=ghost.wheresyoured.at; q=dns/txt; s=pic; t=1733259348; x=1733266548; h=Message-Id: List-Unsubscribe-Post: List-Unsubscribe: Reply-To: To: To: From: From: Subject: Subject: Content-Type: Mime-Version: Date: Sender: Sender: X-Feedback-Id; bh=5lskDOw5Pmw3B9zNdU6PTOgWoESQ5ajSvNgth8WPFzk=; b=KFzQrOoIAHAABTDGnHpMtuTz//7tEAb1w5K0nSc89Gfu8fvGW39sm8Ra9dOrRfbAY/q5EaggG3tNgselsux4VgN/Jki5rXcRigdCWIjtN7EY/ZiDMdYQfbEVX75+7CCQBoBSUu/aRSqwSLDJJfhef/imx/tgmImnHtWLNxAewEk=",
      },
      {
        name: "DKIM-Signature",
        value:
          "a=rsa-sha256; v=1; c=relaxed/relaxed; d=mailgun.org; q=dns/txt; s=mg; t=1733259348; x=1733266548; h=Message-Id: List-Unsubscribe-Post: List-Unsubscribe: Reply-To: To: To: From: From: Subject: Subject: Content-Type: Mime-Version: Date: Sender: Sender: X-Feedback-Id; bh=5lskDOw5Pmw3B9zNdU6PTOgWoESQ5ajSvNgth8WPFzk=; b=OnWm+b/+WN4mr1okAfivYw/bB/5fpOOYKWmo786oSiCmgfYVLEy8QsZqK6lo6DpSYP+J0dXxDU1nt/KqysN8TQh9T9HXJzpYiTqxJKPAZDRlSTKTYJqVv07T/N1qJLpB/94vXeCUVxDf4tbVWcVjM5q9haXpTUfnM55jAsY28Zw=",
      },
      {
        name: "X-Feedback-Id",
        value:
          "postmaster@ghost.wheresyoured.at:bulk-email-ghost-email-blog-1034837:65b3f00f8b0d06c621b89449:mailgun",
      },
      {
        name: "X-Mailgun-Sending-Ip",
        value: "159.135.234.31",
      },
      {
        name: "X-Mailgun-Sending-Ip-Pool-Name",
        value: "Bulk - Standard",
      },
      {
        name: "X-Mailgun-Sending-Ip-Pool",
        value: "6155d7ba935d084321777411",
      },
      {
        name: "X-Mailgun-Sid",
        value:
          "WyI5OGMyOCIsImx5ZGlhLnN0ZXBhbmVrQGdtYWlsLmNvbSIsImQzMmM2YzkiXQ==",
      },
      {
        name: "Received",
        value:
          "by 92ba5fd6987a with HTTP id 674f705426dad0f4e6185a4b; Tue, 03 Dec 2024 20:55:36 GMT",
      },
      {
        name: "X-Mailgun-Batch-Id",
        value: "674f7048d42ae8274456a251",
      },
      {
        name: "Sender",
        value: "noreply=wheresyoured.at@ghost.wheresyoured.at",
      },
      {
        name: "Date",
        value: "Tue, 03 Dec 2024 20:55:36 +0000",
      },
      {
        name: "Mime-Version",
        value: "1.0",
      },
      {
        name: "Content-Type",
        value:
          'multipart/alternative; boundary="b7e8ea8d919411c3a0039feab0a598846d6731dd2a51beaded9b998895b1"',
      },
      {
        name: "Subject",
        value: "Godot Isn't Making it",
      },
      {
        name: "From",
        value: "Ed Zitron \u003cnoreply@wheresyoured.at\u003e",
      },
      {
        name: "To",
        value: "lydia.stepanek@gmail.com",
      },
      {
        name: "X-Mailgun-Tag",
        value: "bulk-email",
      },
      {
        name: "X-Mailgun-Tag",
        value: "ghost-email",
      },
      {
        name: "X-Mailgun-Tag",
        value: "blog-1034837",
      },
      {
        name: "X-Mailgun-Track-Opens",
        value: "true",
      },
      {
        name: "Reply-To",
        value: "ed@ezpr.com",
      },
      {
        name: "List-Unsubscribe",
        value:
          "\u003chttps://www.wheresyoured.at/unsubscribe/?uuid=88b7f234-a9e6-4116-bf9b-fb5c3e18c245&key=2e353da26364e4531fc97c78c9fcd49e5a7ebdef3089353ab4418268b8f40efd&newsletter=0bbe9984-dc2a-40de-b8a3-cae0d1f940f1\u003e, \u003cmailto:u+mq6wimzsmm3ggojgmvwwc2lmfvuwipjwg42gmnzqgnrdoojzmvqtcmbqgaytamlbg44dcjtihu4dmnrthbrdkyzxguzdgzrugyydemjrgrtdgmtcmfrtkojvgjqwcjtjhuzdamrugezdamzsga2tkmzwfyzwcmbwmu4gizbugiydgojzhfrcknbqm5ug643ufz3wqzlsmvzxs33vojswiltboqtheplmpfsgsyjoon2gk4dbnzswwjjugbtw2yljnqxgg33nez2d2ytvnrvs2zlnmfuwyjtuhvtwq33toqwwk3lbnfwcm5b5mjwg6zzngeydgnbygm3sm5r5gi@ghost.wheresyoured.at\u003e",
      },
      {
        name: "List-Unsubscribe-Post",
        value: "List-Unsubscribe=One-Click",
      },
      {
        name: "X-Mailgun-Variables",
        value: '{"email-id": "674f703b799ea1000101a781"}',
      },
      {
        name: "Message-Id",
        value:
          "\u003c20241203205536.3a06e8dd4203999b@ghost.wheresyoured.at\u003e",
      },
    ],
    body: {
      size: 0,
    },
    parts: [
      {
        partId: "0",
        mimeType: "text/plain",
        filename: "",
        headers: [
          {
            name: "Content-Type",
            value: 'text/plain; charset="utf-8"',
          },
          {
            name: "Content-Transfer-Encoding",
            value: "quoted-printable",
          },
        ],
        body: {
          size: 43107,
          data: "",
        },
      },
      {
        partId: "1",
        mimeType: "text/html",
        filename: "",
        headers: [
          {
            name: "Content-Type",
            value: 'text/html; charset="utf-8"',
          },
          {
            name: "Content-Transfer-Encoding",
            value: "quoted-printable",
          },
        ],
        body: {
          size: 83831,
          data: "",
        },
      },
    ],
  },
  sizeEstimate: 140211,
  historyId: "53600892",
  internalDate: "1733259336000",
};
